<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chattingMapper">

   <resultMap type="ChattingRoom" id="chattingRoom_rm">
      <id property="chattingNo" column="CHATTING_NO" />

      <result property="lastMessage" column="LAST_MESSAGE" />
      <result property="sendTime" column="SEND_TIME" />
      <result property="targetNo" column="TARGET_NO" />
      <result property="targetNickName" column="TARGET_NICKNAME" />
      <result property="targetProfile" column="TARGET_PROFILE" />
      <result property="notReadCount" column="NOT_READ_COUNT" />
   </resultMap>

   <resultMap type="Message" id="message_rm">
      <id property="messageNo" column="MESSAGE_NO" />

      <result property="messageContent" column="MESSAGE_CONTENT" />
      <result property="readFlag" column="READ_FL" />
      <result property="senderNo" column="SENDER_NO" />
      <result property="chattingNo" column="CHATTING_NO" />
      <result property="sendTime" column="SEND_TIME" />
   </resultMap>
   
   
   <!-- 채팅 확인 -->  <!--// CHATTING_NO :빈칸일 수 있음 -> SUM을 하면 NULL이 됨 -> NULL일 때 0으로.  -->
   <select id="checkChattingNo" resultType="_int">
      SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO 
      FROM CHATTING_ROOM
      WHERE (OPEN_MEMBER = #{loginMemberNo} AND PARTICIPANT = #{targetNo})
      OR (OPEN_MEMBER = #{targetNo} AND PARTICIPANT = #{loginMemberNo})
   </select>
   
  									         <!--/ map에는 targetNo, loginMemberNo 두개뿐, selectKey를 이용해서 생성된 키를 넣자 
   																			chattingNo가 없는 상태에서 map에 chattingNo를 자동으로 추가해줌. -->
   <!-- 채팅방 생성 -->      <!--   / map은 얕은 복사로 원본 주소를 가지고 있는 상태임을 기억하기! -->
   <insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">
      <selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
         SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
      </selectKey>
   
      INSERT INTO CHATTING_ROOM
      VALUES(#{chattingNo}, DEFAULT, #{loginMemberNo}, #{targetNo})
   </insert>


		<!-- 참여중인 채팅방 조회 -->
		<select id="selectRoomList" resultMap="chattingRoom_rm">
      SELECT CHATTING_NO
         ,(SELECT MESSAGE_CONTENT FROM (
            SELECT * FROM MESSAGE M2
            WHERE M2.CHATTING_NO = R.CHATTING_NO
            ORDER BY MESSAGE_NO DESC) 
            WHERE ROWNUM = 1) LAST_MESSAGE  <!-- 현재 채팅방의 가장 마지막 메세지(미리보기) -->
         ,TO_CHAR(NVL((SELECT MAX(SEND_TIME) SEND_TIME 
               FROM MESSAGE M
               WHERE R.CHATTING_NO  = M.CHATTING_NO), CH_CREATE_DATE), 
               'YYYY.MM.DD') SEND_TIME  <!-- 보낸 시간 -->
         ,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
            WHERE R2.CHATTING_NO = R.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberNo}),
            R.PARTICIPANT,
            R.OPEN_MEMBER
            ) TARGET_NO  <!-- 상대방 번호 --> 
         ,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
            WHERE R2.CHATTING_NO = R.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberNo}),
            (SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT),
            (SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER)
            ) TARGET_NICKNAME   
         ,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
            WHERE R2.CHATTING_NO = R.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberNo}),
            (SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT),
            (SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER)
            ) TARGET_PROFILE
         ,(SELECT COUNT(*) FROM MESSAGE M WHERE M.CHATTING_NO = R.CHATTING_NO AND READ_FL = 'N' AND SENDER_NO != #{memberNo}) NOT_READ_COUNT
         ,(SELECT MAX(MESSAGE_NO) SEND_TIME FROM MESSAGE M WHERE R.CHATTING_NO  = M.CHATTING_NO) MAX_MESSAGE_NO
      FROM CHATTING_ROOM R
      WHERE OPEN_MEMBER = #{memberNo}
      OR PARTICIPANT = #{memberNo}
      ORDER BY MAX_MESSAGE_NO DESC NULLS LAST  <!-- 목록에서 최근 채팅방이 제일 위로 올라오게 -->
   </select>



   <!-- 채팅 메세지 삽입 -->
   <insert id="insertMessage">
      INSERT INTO "MESSAGE"
      VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, DEFAULT, DEFAULT, #{senderNo}, #{chattingNo})
   </insert>
   
   
   <!-- 채팅 메세지 중 내가 보내지 않은 글을 읽음으로 표시 -->
   <update id="updateReadFlag">
      UPDATE "MESSAGE" SET
      READ_FL = 'Y'
      WHERE CHATTING_NO = #{chattingNo}
      AND SENDER_NO != #{memberNo}
   </update>

   <!-- 채팅방 메세지 조회 -->
   <select id="selectMessageList" resultMap="message_rm">
      SELECT MESSAGE_NO, MESSAGE_CONTENT, READ_FL, SENDER_NO, CHATTING_NO,
      TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') SEND_TIME 
      FROM MESSAGE
      WHERE CHATTING_NO  = #{chattingNo}
      ORDER BY MESSAGE_NO
   </select>
	







</mapper>
